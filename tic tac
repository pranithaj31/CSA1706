def print_board(board):
    print()
    for i in range(3):
        print(" " + " | ".join(board[i]))
        if i < 2:
            print("---+---+---")
    print()

def check_winner(board, player):
    # Check rows, columns and diagonals
    for i in range(3):
        if all([cell == player for cell in board[i]]):  # Row
            return True
        if all([board[j][i] == player for j in range(3)]):  # Column
            return True
    # Diagonals
    if all([board[i][i] == player for i in range(3)]):
        return True
    if all([board[i][2 - i] == player for i in range(3)]):
        return True
    return False

def is_board_full(board):
    return all(cell != " " for row in board for cell in row)

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    while True:
        print_board(board)
        print(f"Player {current_player}, enter your move as row and column (1-3 each):")

        try:
            row, col = map(int, input().split())
            if row < 1 or row > 3 or col < 1 or col > 3:
                print("Invalid input. Rows and columns must be between 1 and 3.")
                continue
            if board[row-1][col-1] != " ":
                print("That spot is already taken. Try again.")
                continue
        except ValueError:
            print("Invalid input. Please enter two numbers separated by space.")
            continue

        board[row-1][col-1] = current_player

        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins! ðŸŽ‰")
            break

        if is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break

        current_player = "O" if current_player == "X" else "X"

if __name__ == "__main__":
    tic_tac_toe()
